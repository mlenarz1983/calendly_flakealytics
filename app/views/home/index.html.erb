<div class='header'>
    <div class='user-info'>
        <img src="<%= @user.avatar_url %>" class="user-icon" />
        
        <div class="user-fullname"><%= @user.first_name %> <%= @user.last_name %></div>
        <br/>
        <div class="user-email"><%= @user.email_address %></div>
    </div>

    <h1 class='title'>Calendly Flake-alytics</h1>
    <h3 class='subtitle'>Who's flaking on your meetings?</h3>


</div>

<div class='content'>
    <div id="loading-indicator">
        loading...
    </div>

    <div id="zero-state" style="display: none">
        No users found.  <a class='add-user-button' href=''>Add one.</a>
    </div>

    <div id="dashboard" style="display: none">
        <div class="first-column">
            <div style="width:100%;" class='date-chart-container'>
                <canvas id="date-canvas"></canvas>
            </div>
        </div>

        <div class="second-column">
            <div style="width:100%;" class='event-type-chart-container'>
                <canvas id="event-type-canvas"></canvas>
            </div>

            <div style="width:100%;" class='email-chart-container'>
                <canvas id="email-canvas"></canvas>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    //todo: hit endpoints for data

    var flakesByDate = {
        '15min': [
            {'date': '2018-10-09', 'count': 4},
            {'date': '2018-10-10', 'count': 7},
            {'date': '2018-10-11', 'count': 2},
            {'date': '2018-10-12', 'count': 3},
            {'date': '2018-10-13', 'count': 15},
            {'date': '2018-10-14', 'count': 9},
            {'date': '2018-10-15', 'count': 6}
        ],
        '30min': [
            {'date': '2018-10-09', 'count': 12},
            {'date': '2018-10-10', 'count': 5},
            {'date': '2018-10-11', 'count': 5},
            {'date': '2018-10-12', 'count': 8},
            {'date': '2018-10-13', 'count': 5},
            {'date': '2018-10-14', 'count': 2},
            {'date': '2018-10-15', 'count': 6}
        ]
    };

    var flakesByEmail = {
        'dear_leader.gov.nk': 55,
        'yahoo.com': 13,
        'hotmail.com': 8,
        'gmail.com': 5
    };

    window.calendly = window.calendly || {};
    window.calendly.availableColors = ['#d78257', '#35362b',  '#7e523a', '#e2c287', '#bebcbb'];

    function refreshFlakesByEmailChart(flakesByEmail) {
        //todo: clean old chart

        var counts = [];
        var chartColors = [];
        var chartLabels = [];

        for (var emailProvider in flakesByEmail) {
            if (flakesByEmail.hasOwnProperty(emailProvider)) { 
                chartColors.push(window.calendly.availableColors[chartLabels.length % window.calendly.availableColors.length]); // cycle colors
                counts.push(flakesByEmail[emailProvider]);
                chartLabels.push(emailProvider);
            }
        }

        var config = {
            type: 'pie',
            data: {
                datasets: [{
                    data: counts,
                    backgroundColor: chartColors
                }],
                labels: chartLabels
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: 'By Email'
                },
                legend: {
                    display: false
                }
            }
        };

        var ctx = document.getElementById('email-canvas').getContext('2d');
        window.byEmailChart = new Chart(ctx, config);
    }

    function refreshFlakesByEventTypeChart(flakesByDate) {
        //todo: clean old chart

        var eventTypeCounts = [];
        var chartColors = [];
        var chartLabels = [];

        // for speed of developement, I'm co-opting the flakesByDate endpoint.  in a real-world app, I
        // would consider creating a dedicated endpoint for performance reasons.  there's a  
        // trade-off, though: it would be a separate database query... BUT if cacheing were introduced,
        // that small cost would quickly be amortized.

        for (var eventType in flakesByDate) {
            if (flakesByDate.hasOwnProperty(eventType)) { 
                var totalFlakes = 0;
                for (var i=0; i<flakesByDate[eventType].length; i++) {
                    totalFlakes += flakesByDate[eventType][i]['count'];
                }

                chartColors.push(window.calendly.availableColors[chartLabels.length % window.calendly.availableColors.length]); // cycle colors
                eventTypeCounts.push(totalFlakes);
                chartLabels.push(eventType);
            }
        }

        var config = {
            type: 'pie',
            data: {
                datasets: [{
                    data: eventTypeCounts,
                    backgroundColor: chartColors
                }],
                labels: chartLabels
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: 'By Event Type'
                },
                legend: {
                    display: false
                }
            }
        };

        var ctx = document.getElementById('event-type-canvas').getContext('2d');
        window.byEventTypeChart = new Chart(ctx, config);
    }

    function refreshFlakesByDateChart(flakesByDate) {
        //todo: clean old chart

        var dateLabels = [];

        // gracefully handle situation where there are no event types / stats
        if (Object.keys(flakesByDate).length > 1) {
            // the flakesByDate will always have the same keys across each of the event types.  i.e. the dates
            // from the first event type will always match the dates from additional event types.
            for (var i=0; i<flakesByDate[Object.keys(flakesByDate)[0]].length; i++) {
                dateLabels.push(flakesByDate[Object.keys(flakesByDate)[0]][i]['date']);
            }
        }

        var datasets = [];
        for (var eventType in flakesByDate) {
            if (flakesByDate.hasOwnProperty(eventType)) { 
                var dataset = {
                    label: eventType,
                    backgroundColor: window.calendly.availableColors[datasets.length % window.calendly.availableColors.length], // cycle colors
                    borderColor: window.calendly.availableColors[datasets.length % window.calendly.availableColors.length], // cycle colors
                    fill: false,
                    data: []
                };
                for (var i=0; i<flakesByDate[eventType].length; i++) {
                    dataset['data'].push(flakesByDate[eventType][i]['count']);     
                }
                datasets.push(dataset);
            }
        }

        var config = {
            type: 'line',
            data: {
                labels: dateLabels,
                datasets: datasets
            },
            options: {
                responsive: true,
                title: {
                    display: false,
                    text: 'By Date'
                },
                legend: {
                    display: false
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Date'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Cancellations'
                        }
                    }]
                }
            }
        };

        var ctx = document.getElementById('date-canvas').getContext('2d');
        window.byDateChart = new Chart(ctx, config);
    }

    function queryAndRefreshStats(userId) {
        var loadingIndicator = document.getElementById("loading-indicator");
        var dashboard = document.getElementById("dashboard");

        loadingIndicator.style.display = "block";
        dashboard.style.display = "none";

        // in a real-world application, the ajax API would be either jQuery or something baked into angular/react
        var xhr = new XMLHttpRequest();
        xhr.open('GET', 'stats/' + userId);
        xhr.onload = function() {
            if (xhr.status === 200) {
                console.log(xhr.responseText);

                //todo: parse json

                refreshFlakesByDateChart(flakesByDate);
                refreshFlakesByEventTypeChart(flakesByDate);
                refreshFlakesByEmailChart(flakesByEmail);
            }
            else {
                //todo: graceful error message
            }

            loadingIndicator.style.display = "none";
            dashboard.style.display = "block";
        };
        xhr.send();
    }

    window.onload = function() {

        queryAndRefreshStats(6);


        // refreshFlakesByDateChart(flakesByDate);
        // refreshFlakesByEventTypeChart(flakesByDate);
        // refreshFlakesByEmailChart(flakesByEmail);
    };


</script>
